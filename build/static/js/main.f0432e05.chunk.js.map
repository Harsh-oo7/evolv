{"version":3,"sources":["redux/action/index.js","Admin.js","Home.js","Login.js","App.js","reportWebVitals.js","redux/reducer/dishDetails.js","redux/reducer/addRole.js","redux/reducer/index.js","redux/store.js","index.js"],"names":["addDishDetail","dishes","type","payload","addRole","role","Admin","useState","dish","setDish","dishname","setDishName","protein","setProtein","carbs","setCarbs","fat","setFat","ind","setInd","editProtein","setEditProtein","editCarbs","setEditCarbs","editFat","setEditFat","dispatch","useDispatch","userData","useSelector","state","updateRole","history","useHistory","className","to","onClick","push","htmlFor","id","value","onChange","event","target","placeholder","Number","name","newDish","calories","newArray1","map","item","index","tempArray","splice","onDeleteDish","onEditDish","onDoneDish","Home","dishArray","updateState","setDishes","email","filter","includes","calorie","Login","setEmail","password","setPassword","obj","alert","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","allDish","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0432e05.chunk.js","sourcesContent":["export const addDishDetail = (dishes) => {\r\n    {\r\n        return {\r\n            type:\"ADD_DISH\",\r\n            payload:dishes\r\n        }\r\n    }\r\n}\r\n\r\nexport const addRole = (role) => {\r\n    {\r\n        return {\r\n            type:\"ADD_ROLE\",\r\n            payload:role\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport './Admin.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {addDishDetail} from './redux/action/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {addRole} from './redux/action/index';\r\n\r\nfunction Admin() { \r\n\r\n    const [dish, setDish] = useState([]);\r\n    const [dishname, setDishName] = useState('');\r\n    const [protein, setProtein] = useState();\r\n    const [carbs, setCarbs] = useState();\r\n    const [fat, setFat] = useState();\r\n    const [ind, setInd] = useState();\r\n    const [editProtein, setEditProtein] = useState();\r\n    const [editCarbs, setEditCarbs] = useState();\r\n    const [editFat, setEditFat] = useState();\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector((state) => state.updateRole);\r\n    const history = useHistory();\r\n\r\n    const addDish = () => {\r\n        let newDish = {};\r\n        newDish.dishname = dishname;\r\n        newDish.protein = protein;\r\n        newDish.carbs = carbs;\r\n        newDish.fat = fat;\r\n        const calories = protein+carbs+fat;\r\n        newDish.calories = calories;\r\n        // console.log(newDish);\r\n        let newArray1 = [...dish];\r\n        newArray1.push(newDish);\r\n        // console.log(newArray1);\r\n        setDish(newArray1);\r\n        dispatch(addDishDetail(newArray1));\r\n    }\r\n\r\n    const onDeleteDish = (index) => {\r\n        let tempArray = [...dish];\r\n        tempArray.splice(index,1);\r\n        setDish(tempArray);\r\n        dispatch(addDishDetail(tempArray));\r\n        // console.log(dish.length)\r\n    }\r\n\r\n    const onEditDish = (index) => {\r\n        setInd(index);\r\n        let tempArray = [...dish];\r\n        setEditProtein(tempArray[index].protein);\r\n        setEditCarbs(tempArray[index].carbs);\r\n        setEditFat(tempArray[index].fat);\r\n        \r\n    }\r\n\r\n    const onDoneDish = (index) => {\r\n        let tempArray = [...dish];\r\n        tempArray[index].protein = editProtein;\r\n        tempArray[index].carbs = editCarbs;\r\n        tempArray[index].fat = editFat;\r\n        tempArray[index].calories = editProtein+editCarbs+editFat;\r\n        setDish(tempArray);\r\n        setInd(null);\r\n        dispatch(addDishDetail(tempArray));\r\n    }\r\n    \r\n    const onLogout = () => {\r\n        dispatch(addRole(null));\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin\">\r\n            {userData !== null && userData.role  === \"admin\"? \r\n        <div className=\"admin__container1\">\r\n            <h1>Admin</h1>\r\n            <Link to='/'>\r\n                Home\r\n            </Link>\r\n            <button type=\"button\" className=\"admin__btn\" onClick={onLogout}>\r\n                Logout\r\n            </button> \r\n            \r\n        <div className=\"admin__conatiner\">\r\n            <div className=\"admin__container2\">\r\n                <label htmlFor=\"dishname\"><h3>Dish Name : </h3></label>\r\n                <input type=\"text\" id=\"dishname\" value={dishname} onChange={event => setDishName(event.target.value)} placeholder=\"write a dish name\"/>\r\n                <br />\r\n\r\n                <label htmlFor=\"protein\"><h3>Protein :</h3> </label>\r\n                <input type=\"number\" value={protein} onChange={event => setProtein(Number(event.target.value))} name=\"protein\" id=\"protein\" placeholder=\"Enter protein in grams \" />\r\n                <br />\r\n\r\n                <label htmlFor=\"carbs\"><h3>Carbs :</h3> </label>\r\n                <input type=\"number\" value={carbs} onChange={event => setCarbs(Number(event.target.value))} name=\"carbs\" id=\"carbs\" placeholder=\"Enter carbs in grams \" />\r\n                <br />\r\n\r\n                <label htmlFor=\"fat\"><h3>Fat :</h3> </label>\r\n                <input type=\"number\" value={fat} onChange={event => setFat(Number(event.target.value))} name=\"fat\" id=\"fat\" placeholder=\"Enter fat in grams \" />\r\n                <br />\r\n\r\n                <button type=\"button\" onClick={addDish}>Add</button>\r\n                {/* <p>{dish.length}</p> */}\r\n            </div>\r\n\r\n            <div className=\"admin__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Dish Name</th>\r\n                            <th>Protein</th>\r\n                            <th>Carbs</th>\r\n                            <th>Fat</th>\r\n                            <th>Calories</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {dish.map( (item,index) => (\r\n                            <tr key={item.dishname}>\r\n                                <td>{item.dishname}</td>\r\n                                {ind !== index ? <td>{item.protein}</td> : <td><input type=\"number\" value={editProtein} onChange={event => setEditProtein(Number(event.target.value))}/></td>}\r\n                                {ind !== index ? <td>{item.carbs}</td> : <td><input type=\"number\" value={editCarbs} onChange={event => setEditCarbs(Number(event.target.value))}/></td>}\r\n                                {ind !== index ? <td>{item.fat}</td> : <td><input type=\"number\" value={editFat} onChange={event => setEditFat(Number(event.target.value))}/></td>}\r\n                                {ind !== index ? <td>{item.calories}</td> :<td>{editCarbs+editFat+editProtein}</td> }\r\n                                {ind !== index ? <td><button type=\"button\" onClick={() => onDeleteDish(index)}>Delete</button></td> : <td></td>}\r\n                                {ind !== index ? <td><button type=\"button\" onClick={() => onEditDish(index)}>Edit</button></td> : <td><button type=\"button\" onClick={() => onDoneDish(index)}>Done</button></td> }\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n    </div>\r\n            :\r\n            <div>\r\n                <p>404 page</p>\r\n            </div>\r\n        }\r\n     \r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Admin;\r\n","import React,{useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport './Home.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {addRole} from './redux/action/index';\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const dishArray = useSelector((state) => state.updateState);\r\n    const userData = useSelector((state) => state.updateRole);\r\n    const [dishes, setDishes] = useState(dishArray);\r\n    \r\n    const handleChange = (event) => {\r\n        setDishes(dishArray.filter(item => item.dishname.includes(event.target.value)));\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <div className=\"home__nav\">\r\n                <p className=\"home__email\">{userData !== null ? userData.email : \"email\"}</p>\r\n                \r\n                { userData === null \r\n                ? \r\n                    <button className=\"home__btn\" type=\"button\" onClick={() => history.push('/login')}>Login</button> \r\n                :\r\n                    <button className=\"home__btn\" type=\"button\"  onClick={() => dispatch(addRole(null))}>Logout</button> \r\n                } \r\n            </div>\r\n            \r\n            \r\n            <input className=\"home__search\" type=\"text\" placeholder=\"Search dish...\" onChange={handleChange}/>\r\n            \r\n            <div className=\"home__container\">\r\n                {dishes.map((item) => (\r\n                    <div className=\"home__box\">\r\n                        <span>{\"DishName:\"+item.dishname}</span>\r\n                        <span>{\"Protein:\"+item.protein}</span>\r\n                        <span>{\"Carbs:\"+item.carbs}</span>\r\n                        <span>{\"Fat:\"+item.fat}</span>\r\n                        <span>{\"Calories:\"+item.calorie}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {addRole} from './redux/action/index';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const onLogin = () => {\r\n        if(email === \"admin@gmail.com\" && password === \"admin123\")\r\n        {\r\n            let obj = {};\r\n            obj.role=\"admin\";\r\n            obj.email = email;\r\n            obj.password = password;\r\n            dispatch(addRole(obj));\r\n            history.push('/admin');\r\n        }\r\n        else if(email === \"user@gmail.com\" && password === \"user123\") {\r\n            let obj = {};\r\n            obj.role=\"user\";\r\n            obj.email = email;\r\n            obj.password = password;\r\n            dispatch(addRole(obj));\r\n            history.push('/');\r\n        } \r\n        else {\r\n            alert(\"Please Check Your Email & Password\")\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <h1>Login</h1>\r\n            <div className=\"login__first\">\r\n                <label htmlFor=\"email\">Enter email : </label>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={event => setEmail(event.target.value)}/>\r\n            </div>\r\n            <div className=\"login__second\">\r\n                <label htmlFor=\"password\">Enter password : </label>\r\n                <input type=\"password\" id=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\r\n            </div>\r\n            <button type=\"button\" onClick={onLogin}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Admin from './Admin';\nimport Home from './Home';\nimport Login from './Login';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"app\">\n      <Switch>\n        \n        <Route path=\"/admin\">\n          <Admin/>\n        </Route>\n\n        <Route path=\"/login\">\n          <Login/>\n        </Route>\n\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const allDish = [];\r\n\r\nconst updateState = (state=allDish,action) => {\r\n    switch(action.type) {\r\n        case \"ADD_DISH\" : return state = action.payload ;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default updateState;","const role = null;\r\n\r\nconst updateRole = (state=role,action) => {\r\n    switch(action.type) {\r\n        case \"ADD_ROLE\" : return state = action.payload ;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default updateRole;","import updateState from './dishDetails';\r\nimport {combineReducers} from 'redux';\r\nimport updateRole from './addRole';\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        updateState,\r\n        updateRole\r\n    }\r\n);\r\n\r\nexport default rootReducer;","import {createStore} from 'redux';\r\nimport rootReducer from './reducer/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}